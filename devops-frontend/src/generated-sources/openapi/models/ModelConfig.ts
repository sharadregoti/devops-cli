/* tslint:disable */
/* eslint-disable */
/**
 * NEW Devops API
 * Devops API Sec
 *
 * The version of the OpenAPI document: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelPlugin } from './ModelPlugin';
import {
    ModelPluginFromJSON,
    ModelPluginFromJSONTyped,
    ModelPluginToJSON,
} from './ModelPlugin';
import type { ModelServer } from './ModelServer';
import {
    ModelServerFromJSON,
    ModelServerFromJSONTyped,
    ModelServerToJSON,
} from './ModelServer';

/**
 * 
 * @export
 * @interface ModelConfig
 */
export interface ModelConfig {
    /**
     * 
     * @type {Array<ModelPlugin>}
     * @memberof ModelConfig
     */
    plugins: Array<ModelPlugin>;
    /**
     * 
     * @type {ModelServer}
     * @memberof ModelConfig
     */
    server: ModelServer;
}

/**
 * Check if a given object implements the ModelConfig interface.
 */
export function instanceOfModelConfig(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "plugins" in value;
    isInstance = isInstance && "server" in value;

    return isInstance;
}

export function ModelConfigFromJSON(json: any): ModelConfig {
    return ModelConfigFromJSONTyped(json, false);
}

export function ModelConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'plugins': ((json['plugins'] as Array<any>).map(ModelPluginFromJSON)),
        'server': ModelServerFromJSON(json['server']),
    };
}

export function ModelConfigToJSON(value?: ModelConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'plugins': ((value.plugins as Array<any>).map(ModelPluginToJSON)),
        'server': ModelServerToJSON(value.server),
    };
}

