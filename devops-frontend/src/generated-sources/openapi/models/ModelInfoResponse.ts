/* tslint:disable */
/* eslint-disable */
/**
 * NEW Devops API
 * Devops API Sec
 *
 * The version of the OpenAPI document: v0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProtoAction } from './ProtoAction';
import {
    ProtoActionFromJSON,
    ProtoActionFromJSONTyped,
    ProtoActionToJSON,
} from './ProtoAction';

/**
 * 
 * @export
 * @interface ModelInfoResponse
 */
export interface ModelInfoResponse {
    /**
     * 
     * @type {Array<ProtoAction>}
     * @memberof ModelInfoResponse
     */
    actions: Array<ProtoAction>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModelInfoResponse
     */
    defaultIsolator: Array<string>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ModelInfoResponse
     */
    general: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof ModelInfoResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ModelInfoResponse
     */
    isolatorType: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModelInfoResponse
     */
    resourceTypes: Array<string>;
}

/**
 * Check if a given object implements the ModelInfoResponse interface.
 */
export function instanceOfModelInfoResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "actions" in value;
    isInstance = isInstance && "defaultIsolator" in value;
    isInstance = isInstance && "general" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "isolatorType" in value;
    isInstance = isInstance && "resourceTypes" in value;

    return isInstance;
}

export function ModelInfoResponseFromJSON(json: any): ModelInfoResponse {
    return ModelInfoResponseFromJSONTyped(json, false);
}

export function ModelInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelInfoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actions': ((json['actions'] as Array<any>).map(ProtoActionFromJSON)),
        'defaultIsolator': json['defaultIsolator'],
        'general': json['general'],
        'id': json['id'],
        'isolatorType': json['isolatorType'],
        'resourceTypes': json['resourceTypes'],
    };
}

export function ModelInfoResponseToJSON(value?: ModelInfoResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actions': ((value.actions as Array<any>).map(ProtoActionToJSON)),
        'defaultIsolator': value.defaultIsolator,
        'general': value.general,
        'id': value.id,
        'isolatorType': value.isolatorType,
        'resourceTypes': value.resourceTypes,
    };
}

