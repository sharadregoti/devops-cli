operations:
  - name: "namespace"
    json_paths: 
    - path: "metadata.namespace"
    output_format: ""
  - name: "name"
    json_paths: 
    - path: "metadata.name"
    output_format: ""
  - name: "type"
    json_paths: 
    - path: "type"
    output_format: ""
  - name: "age"
    json_paths: 
    - path: "metadata.creationTimestamp|@age"
    output_format: ""
styles:
  - row_background_color: lightskyblue
    conditions:
    - 'true'
specific_actions:
  - name: "describe"
    key_binding: "d"
    execution:
      cmd: |
        #!/bin/bash
        kubectl describe {{.resourceType}} {{.resourceName}} -n {{.isolatorName}} --kubeconfig {{.authPath}} --context {{.authName}}
    output_type: "string"
  - name: "decode-secret"
    key_binding: "x"
    execution:
      cmd: |
        #!/bin/bash

        # use kubectl to get the secret data in JSON format and extract the Base64-encoded values
        secret_data=$(kubectl get {{.resourceType}} {{.resourceName}} -n {{.isolatorName}} --kubeconfig {{.authPath}} --context {{.authName}} -o json | jq -r '.data')

        # iterate over the keys in the secret data and decode the values
        for key in $(echo "${secret_data}" | jq -r 'keys[]'); do
          value=$(echo "${secret_data}" | jq -r --arg key "$key" '.[$key]' | base64 -d)
          echo "${key}: ${value}"
        done
    output_type: "string"